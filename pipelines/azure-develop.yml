trigger:
    branches:
      include:
          - develop
    paths:
      exclude:
          - '*.md'
          - '*.txt'
          - '.vscode/*'

pool:
    vmImage: 'ubuntu-latest'

stages:
  - template: read-project-info.stage.yml
  - stage: Develop
    displayName: Develop
    jobs:
        - job: Build
          steps:
              - task: UseNode@1
                inputs:
                    version: '18.x'
                displayName: 'Use Node.js 18.x'

              - script: |
                  npm install
                  npm run build
                displayName: 'Building App'

              - task: ArchiveFiles@2
                inputs:
                    rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
                    includeRootFolder: false
                    archiveType: 'zip'
                    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
                    replaceExistingArchive: true
                displayName: 'Archive Files'

              # - task: CopyFiles@2
              #   displayName: 'Copy Files'
              #   inputs:
              #     SourceFolder: '$(Build.ArtifactStagingDirectory)'
              #     Contents: '$(Build.BuildId).zip'
              #     TargetFolder: '$(Build.ArtifactStagingDirectory)/ArtifactsToBePublished'

              - task: PublishBuildArtifacts@1
                displayName: 'Publish Artifact'
                inputs:
                  PathtoPublish: '$(Build.ArtifactStagingDirectory)/ArtifactsToBePublished'
                  ArtifactName: 'App'
        - job: Deploy
          displayName: Deploying
          dependsOn: Build
          condition: succeeded('Build')
          steps:
            - download: current
              artifact: App
            - task: AzureWebApp@1
              inputs:
                azureSubscription: 'devops-landing-page'
                resourceGroupName: 'rg_dev_rutia_landing' 
                appType: 'webAppLinux'
                appName: 'rutia-dev-landing-page'
                deployToSlotOrASE: true
                slotName: Production
                package: '$(Pipeline.Workspace)/App/$(Build.BuildId).zip'
              displayName: Deploy to Azure Web App